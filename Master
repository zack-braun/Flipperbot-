#include <Servo.h>

Servo Servo_1, Servo_2, Servo_3, Servo_4, Servo_5, Servo_6;
int OUT1,OUT2,OUT3,OUT4;


int maxUp, maxDown, maxOut, maxIn;

void setup() {

  Servo_1.attach(9);   
  Servo_2.attach(10);  
  Servo_3.attach(11);
  Servo_4.attach(12);
  
  Serial.begin(9600); //Baud Rate
  delay(100);
  Serial.println( F("start") ); 
  
  maxUp = 180;
  maxDown = 90;
  maxOut = 180;
  maxIn = 90;
  
  modeInitial();
  
}

void loop() {   // using void loop() for a control scheme turning the differnet modes on and off.

  modeUp(maxDown, maxUp);
  //modeOut(maxIn, maxOut);
  modeDown(maxUp, maxDown);
  //modeIn(maxOut, maxIn);
}


void modeInitial(){
  
  Serial.println("****************  Initial State  ****************");
  updateFeedback();
  Servo_1.write(90);
  Servo_2.write(90); 
  //Servo_3.write(90); 
  //Servo_4.write(90); 
  delay(1500); 
  
  //Serial.println("2nd initial");
  //updateFeedback();
  //Set up map statement
  
}

void modeUp(int startPos,int endPos){   //Wings and Feet (ADD FEET CODE)

  Serial.println("****************  Moving Up  ****************");  

  int pos = startPos;
  while(OUT1 < endPos && OUT2 < endPos)
  {
    updateFeedback();
    int oldPos1 = OUT1;
    int oldPos2 = OUT2;
    
    Servo_1.write(pos);
    Servo_2.write(pos);
    delay(10);
    
    updateFeedback();
    int newPos1 = OUT1;
    int newPos2 = OUT2;
    isMoving(oldPos1, oldPos2, newPos1, newPos2); 
    
    pos += 5;
  } 
  Serial.println("------------  Up is completed  ------------"); 
}

void modeDown(int startPos,int endPos){
  
  Serial.println("****************  Moving Down  ****************");   
  
  int pos = startPos;
  while(OUT1 > endPos && OUT2 > endPos)
  {
    updateFeedback();
    int oldPos1 = OUT1;
    int oldPos2 = OUT2;
    
    Servo_1.write(pos);
    Servo_2.write(pos);
    delay(10);
    
    updateFeedback();
    int newPos1 = OUT1;
    int newPos2 = OUT2;
    isMoving(oldPos1, oldPos2, newPos1, newPos2); 
    
    pos -= 5;
  } 
  Serial.println("------------  Down is completed  ------------"); 
}

/*
void modeOut() {  //INVERSE MOTORS

Serial.println("out"); 

    for(int pos = 10; pos < 180; pos+=1); 
  {
  Servo_3.write(pos);
  Servo_4.write(pos);
  updateFeedback();
  New_pos1 = OUT3;
  New_pos2 =OUT4;
  delay(30);
  updateFeedback();
  Old_pos1 = OUT3;
  New_pos2 = OUT4;
  isMoving(); 
    if(OUT3 > 160 && OUT4 > 160) {out =false; //goes to next mode
    }

  }
}
 
  

  
void modeIn(){
 
Serial.println("In");


  for(pos = 160; pos >= 10; pos -= 1); 
  {
  Servo_3.write(pos);
  Servo_4.write(pos);
  updateFeedback();
  New_pos1 = OUT3;
  New_pos2 =OUT4;
  delay(30);
  updateFeedback();
  Old_pos1 = OUT3;
  New_pos2 = OUT4;
  isMoving(); 
    if(OUT3 > 25 && OUT4 > 25) {Serial.println("In completed"); modeUp();   //goes to next mode and reset's all conditons to original true's except for initial///
    
    }

  }
}  
  
*/

void updateFeedback(){ //checks position
  
  OUT1 = analogRead(A5);
  OUT1= map(OUT1, 92, 502, 0, 180);
  Serial.println(OUT1);   
  
  OUT2 = analogRead(A3);
  OUT2= map(OUT2, 89, 504, 0, 180);
  Serial.print("\t");
  Serial.println(OUT2);    
       
  OUT3 = analogRead(A7);
  OUT3= map(OUT3, 90, 502, 0, 180); // need to be changed to correct pins and values on actual robot
  Serial.print("\t");
  Serial.println(OUT3);   
       
  OUT4 = analogRead(A9);
  OUT4= map(OUT4, 90, 502, 0, 180);
  Serial.print("\t");
  Serial.println(OUT4);   
      
}

void isMoving(int old_Pos1, int old_Pos2, int new_Pos1, int new_Pos2) { // troubleshoots if there is a problem returns to initial state and tries again
  
  if (new_Pos1 > old_Pos1  && new_Pos2  > old_Pos2){
    return;
  }
  else { 
     Serial.println("!!!!~~~~~~~~~~  There was Trouble  ~~~~~~~~~~!!!!");
    //modeInitial();
  }
}


  
